"""add user session confirmation code tables

Revision ID: c04b35ba1ec5
Revises: 
Create Date: 2024-11-16 17:36:27.996516

"""
from typing import Sequence, Union

from alembic import op
import sqlalchemy as sa
from sqlalchemy.dialects import postgresql

# revision identifiers, used by Alembic.
revision: str = 'c04b35ba1ec5'
down_revision: Union[str, None] = None
branch_labels: Union[str, Sequence[str], None] = None
depends_on: Union[str, Sequence[str], None] = None


def upgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    op.create_table('link_vault_users',
    sa.Column('id', sa.UUID(), nullable=False, comment='Unique identifier for the user'),
    sa.Column('password_hash', sa.String(length=256), nullable=False, comment='Hashed password of the user'),
    sa.Column('email', sa.String(length=64), nullable=True, comment='Email address of the user'),
    sa.Column('deleted_at', sa.DateTime(), nullable=True, comment='Timestamp when the user was deleted'),
    sa.Column('email_verified', sa.Boolean(), nullable=False, comment="Indicates if the user's email is verified"),
    sa.Column('created_at', sa.DateTime(), nullable=False, comment='Created time'),
    sa.Column('updated_at', sa.DateTime(), nullable=False, comment='Updated time'),
    sa.PrimaryKeyConstraint('id'),
    sa.UniqueConstraint('email'),
    comment='Represents a user in the system'
    )
    op.create_table('link_vault_confirmation_codes',
    sa.Column('id', sa.UUID(), nullable=False, comment='Unique identifier for the confirmation code'),
    sa.Column('code', sa.String(length=64), nullable=False, comment='Confirmation code'),
    sa.Column('user_id', sa.UUID(), nullable=False, comment='Identifier of the user associated with the confirmation code'),
    sa.Column('expired_at', sa.DateTime(), nullable=False, comment='Timestamp when the confirmation code expires'),
    sa.Column('used', sa.Boolean(), nullable=False, comment='Indicates if the confirmation code has been used'),
    sa.Column('created_at', sa.DateTime(), nullable=False, comment='Created time'),
    sa.Column('updated_at', sa.DateTime(), nullable=False, comment='Updated time'),
    sa.ForeignKeyConstraint(['user_id'], ['link_vault_users.id'], ondelete='CASCADE'),
    sa.PrimaryKeyConstraint('id'),
    comment='Represents a confirmation code in the system'
    )
    op.create_table('link_vault_sessions',
    sa.Column('id', sa.UUID(), nullable=False, comment='Unique identifier for the session'),
    sa.Column('user_id', sa.UUID(), nullable=False, comment='Identifier of the user associated with the session'),
    sa.Column('ip', sa.String(length=15), nullable=False, comment='IP address of the session'),
    sa.Column('is_active', sa.Boolean(), nullable=False, comment='Indicates if the session is active'),
    sa.Column('is_closed', sa.Boolean(), nullable=False, comment='Indicates if the session is closed'),
    sa.Column('auth_token_data', postgresql.JSONB(astext_type=sa.Text()), nullable=True, comment='Data for the authentication token'),
    sa.Column('refresh_token_data', postgresql.JSONB(astext_type=sa.Text()), nullable=True, comment='Data for the refresh token'),
    sa.Column('created_at', sa.DateTime(), nullable=False, comment='Created time'),
    sa.Column('updated_at', sa.DateTime(), nullable=False, comment='Updated time'),
    sa.ForeignKeyConstraint(['user_id'], ['link_vault_users.id'], ),
    sa.PrimaryKeyConstraint('id'),
    comment='Represents a user session in the system'
    )
    # ### end Alembic commands ###


def downgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    op.drop_table('link_vault_sessions')
    op.drop_table('link_vault_confirmation_codes')
    op.drop_table('link_vault_users')
    # ### end Alembic commands ###
